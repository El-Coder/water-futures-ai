name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: water-futures-ai
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io
    
    - name: Build and Push Backend
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/water-futures-backend ./backend
        docker push gcr.io/${{ env.PROJECT_ID }}/water-futures-backend
    
    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy water-futures-backend \
          --image gcr.io/${{ env.PROJECT_ID }}/water-futures-backend \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }},ALPACA_API_KEY=${{ secrets.ALPACA_API_KEY }},ALPACA_SECRET_KEY=${{ secrets.ALPACA_SECRET_KEY }},CROSSMINT_API_KEY=${{ secrets.CROSSMINT_API_KEY }},UNCLE_SAM_WALLET_ADDRESS=${{ secrets.UNCLE_SAM_WALLET_ADDRESS }}" \
          --memory 2Gi \
          --cpu 2 \
          --max-instances 10 \
          --min-instances 1
    
    - name: Build and Push MCP Servers
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/water-futures-mcp ./mcp-servers
        docker push gcr.io/${{ env.PROJECT_ID }}/water-futures-mcp
    
    - name: Get Backend URL
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe water-futures-backend --region ${{ env.REGION }} --format 'value(status.url)')
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT
    
    - name: Deploy MCP Servers to Cloud Run
      run: |
        gcloud run deploy water-futures-mcp \
          --image gcr.io/${{ env.PROJECT_ID }}/water-futures-mcp \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }},ALPACA_API_KEY=${{ secrets.ALPACA_API_KEY }},ALPACA_SECRET_KEY=${{ secrets.ALPACA_SECRET_KEY }},CROSSMINT_API_KEY=${{ secrets.CROSSMINT_API_KEY }},BACKEND_URL=${{ steps.backend-url.outputs.url }}" \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --min-instances 1
    
    - name: Get MCP URL
      id: mcp-url
      run: |
        MCP_URL=$(gcloud run services describe water-futures-mcp --region ${{ env.REGION }} --format 'value(status.url)')
        echo "url=$MCP_URL" >> $GITHUB_OUTPUT

    - name: Update Frontend Configuration
      run: |
        cat > frontend/.env.production << EOF
        # Production Environment Configuration - Auto-generated by GitHub Actions
        # Cloud Run service URLs
        
        # Backend API URL (Cloud Run service)
        VITE_API_URL=${{ steps.backend-url.outputs.url }}
        
        # MCP Server URL (Cloud Run service)
        VITE_MCP_URL=${{ steps.mcp-url.outputs.url }}
        
        # Firebase Configuration (same for all environments)
        VITE_FIREBASE_API_KEY=AIzaSyAzAisQlEUKeIHTrpGy64eSm-ZRgduMMLQ
        VITE_FIREBASE_AUTH_DOMAIN=water-futures-ai.firebaseapp.com
        VITE_FIREBASE_PROJECT_ID=water-futures-ai
        VITE_FIREBASE_STORAGE_BUCKET=water-futures-ai.firebasestorage.app
        VITE_FIREBASE_MESSAGING_SENDER_ID=640022295144
        VITE_FIREBASE_APP_ID=1:640022295144:web:3b7bb0826efb6ace0981dd
        VITE_FIREBASE_MEASUREMENT_ID=G-1PKETWJCV2
        EOF

    - name: Output Service URLs
      run: |
        echo "Backend URL: ${{ steps.backend-url.outputs.url }}"
        echo "MCP Server URL: ${{ steps.mcp-url.outputs.url }}"
        echo "Frontend configuration updated with production URLs"